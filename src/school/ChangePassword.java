/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class ChangePassword extends javax.swing.JInternalFrame {

    /**
     * Creates new form ChangePassword
     */
    public ChangePassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        OldPassword = new javax.swing.JPasswordField();
        NewPassword = new javax.swing.JPasswordField();
        ConfirmPassword = new javax.swing.JPasswordField();
        Change = new javax.swing.JButton();

        setClosable(true);
        setTitle("Change Password");

        jLabel1.setText("Current Password-:");

        jLabel2.setText("New password-:");

        jLabel3.setText("Confirm Password-:");

        Change.setText("UPDATE");
        Change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeActionPerformed(evt);
            }
        });
        Change.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChangeKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Change)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(OldPassword)
                        .addComponent(NewPassword)
                        .addComponent(ConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)))
                .addContainerGap(254, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(OldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(Change)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeActionPerformed
try{
String PATH="jdbc:mysql://localhost/";
String PLACE="Schooldb";
String USERNAME="root";
String PASSWORD="";
Connection myconnection=DriverManager.getConnection(PATH + PLACE,USERNAME,PASSWORD);

try{
    if(NewPassword.getText().equals(ConfirmPassword.getText())){
String query="update usertable set password=? where username=? and password=?";
 PreparedStatement mystatement=myconnection.prepareStatement(query);
 mystatement.setString(1,NewPassword.getText() );
 mystatement.setString(2, LoginWindow.u);
 mystatement.setString(3,OldPassword.getText());
 if(mystatement.executeUpdate()>0 )
 {
 
 JOptionPane.showMessageDialog(rootPane, "Password changed successfully");
 this.dispose();
 
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "Current Password Incorrect");
 }
}
    else
 {
 JOptionPane.showMessageDialog(rootPane, "New Password does not match");
 }
}
catch(Exception e){
        
         JOptionPane.showMessageDialog(rootPane, "Error is due to "+ e.getMessage());
   
        }
finally{
        myconnection.close();
        }



}
catch(Exception e){
JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+ e.getMessage());
}

    }//GEN-LAST:event_ChangeActionPerformed

    private void ChangeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChangeKeyReleased
if(evt.getKeyCode()==KeyEvent.VK_ENTER){
try{
String PATH="jdbc:mysql://localhost/";
String PLACE="Schooldb";
String USERNAME="root";
String PASSWORD="";
Connection myconnection=DriverManager.getConnection(PATH + PLACE,USERNAME,PASSWORD);

try{
    if(NewPassword.getText().equals(ConfirmPassword.getText())){
String query="update usertable set password=? where username=? and password=?";
 PreparedStatement mystatement=myconnection.prepareStatement(query);
 mystatement.setString(1,NewPassword.getText() );
 mystatement.setString(2, LoginWindow.u);
 mystatement.setString(3,OldPassword.getText());
 if(mystatement.executeUpdate()>0 )
 {
 
 JOptionPane.showMessageDialog(rootPane, "Password changed successfully");
 this.dispose();
 
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "Current Password Incorrect");
 }
}
    else
 {
 JOptionPane.showMessageDialog(rootPane, "New Password does not match");
 }
}
catch(Exception e){
        
         JOptionPane.showMessageDialog(rootPane, "Error is due to "+ e.getMessage());
   
        }
finally{
        myconnection.close();
        }



}
catch(Exception e){
JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+ e.getMessage());
}



}

    }//GEN-LAST:event_ChangeKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Change;
    private javax.swing.JPasswordField ConfirmPassword;
    private javax.swing.JPasswordField NewPassword;
    private javax.swing.JPasswordField OldPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
