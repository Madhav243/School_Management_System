/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class misc extends javax.swing.JInternalFrame {

    /**
     * Creates new form misc
     */
    public misc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        searchbox = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        school = new javax.swing.JTable();
        nbtn = new javax.swing.JRadioButton();
        adbtn = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        namebox = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        personal1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        OldPassword1 = new javax.swing.JPasswordField();
        NewPassword1 = new javax.swing.JPasswordField();
        ConfirmPassword1 = new javax.swing.JPasswordField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Misc");

        jLabel25.setText("Search by");

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        school.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Admission No.", "Name", "Class", "Section"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(school);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 812, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("School Info", jPanel7);

        nbtn.setText("Name");
        nbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nbtnActionPerformed(evt);
            }
        });

        adbtn.setText("Admission Number");

        jButton2.setText("Delete Row");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jTabbedPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(18, 18, 18)
                                .addComponent(nbtn)
                                .addGap(10, 10, 10)
                                .addComponent(adbtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nbtn)
                    .addComponent(adbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Student Data", jPanel1);

        jLabel26.setText("Search by Name");

        jButton7.setText("Search");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        personal1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Qualification", "Phone No.", "Gender"
            }
        ));
        jScrollPane4.setViewportView(personal1);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jTabbedPane3.addTab("Personal Info", jPanel9);

        jButton3.setText("Delete Row");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addComponent(jTabbedPane3)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(namebox, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7)
                                .addGap(27, 27, 27)
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 865, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 537, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Staff Data", jPanel2);

        jLabel2.setText("Current Password-:");

        jLabel3.setText("New Password-:");

        jLabel6.setText("Confirm Password-:");

        jButton11.setText("UPDATE");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(OldPassword1)
                            .addComponent(NewPassword1)
                            .addComponent(ConfirmPassword1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jButton11)))
                .addContainerGap(566, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(OldPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(NewPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(ConfirmPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addContainerGap(369, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Change Password", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
      
        if(nbtn.isSelected()){         try
            {
                String PATH = "jdbc:mysql://localhost/";
                String PLACE = "Schooldb";
                String USERNAME = "root";
                String PASSWORD = "";

                Connection myconnection = DriverManager.getConnection(PATH + PLACE, USERNAME, PASSWORD);
                try
                {
                    String a="select * from studenttable where fname=?";
                    PreparedStatement mystatement=myconnection.prepareStatement(a);
                    mystatement.setString(1, searchbox.getText());
                    DefaultTableModel mymodel=(DefaultTableModel) school.getModel();
                    ResultSet myresult=mystatement.executeQuery();
                    mymodel.setRowCount(0);
                    if(myresult.next()) //rest code is same as of list of students
                    {
                        getContentPane().revalidate();
                        do
                        {
                            String adm,name,cl,sect;

                            adm=myresult.getString("admno");
                            name=myresult.getString("fname");
                            cl=myresult.getString("class");
                            sect=myresult.getString("section");
                            mymodel.addRow(new String[]{adm,name,cl,sect});

                        }
                        while(myresult.next());

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "No Records Exist");
                    }

                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
        }

        if(adbtn.isSelected()){
            try
            {
                String PATH = "jdbc:mysql://localhost/";
                String PLACE = "Schooldb";
                String USERNAME = "root";
                String PASSWORD = "";

                Connection myconnection = DriverManager.getConnection(PATH + PLACE, USERNAME, PASSWORD);
                try
                {
                    String a="select * from studenttable where admno=?";
                    PreparedStatement mystatement=myconnection.prepareStatement(a);
                    mystatement.setString(1, searchbox.getText());
                    DefaultTableModel mymodel=(DefaultTableModel) school.getModel();
                    ResultSet myresult=mystatement.executeQuery();
                    mymodel.setRowCount(0);
                    if(myresult.next()) //rest code is same as of list of students
                    {
                        getContentPane().revalidate();
                        do
                        {
                            String adm,name,cl,sect;

                            adm=myresult.getString("admno");
                            name=myresult.getString("fname");
                            cl=myresult.getString("class");
                            sect=myresult.getString("section");
                            mymodel.addRow(new String[]{adm,name,cl,sect});

                        }
                        while(myresult.next());

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "No Records Exist");
                    }

                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void nbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nbtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int answer=JOptionPane.showConfirmDialog(rootPane, "Do you really want to delete?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if(answer==JOptionPane.YES_OPTION)
        {

            try
            {  String PATH = "jdbc:mysql://localhost/";
                String PLACE = "Schooldb";
                String USERNAME = "root";
                String PASSWORD = "";

                Connection myconnection = DriverManager.getConnection(PATH + PLACE, USERNAME, PASSWORD);

                try
                {
                    String a="delete from studenttable where admno=?";
                    PreparedStatement mystatement=myconnection.prepareStatement(a);
                    DefaultTableModel mymodel=(DefaultTableModel) school.getModel();

                    String u = school.getValueAt(school.getSelectedRow(), 0).toString();

                    mystatement.setString(1,u);

                    if(mystatement.executeUpdate()>0)
                    {

                        JOptionPane.showMessageDialog(rootPane, "Student Data Deleted Successfully ");
                        mymodel.removeRow(school.getSelectedRow());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Error in Saving Successfully1 ");
                    }

                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query1 " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection1 " + e.getMessage());
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try
        {
            String PATH = "jdbc:mysql://localhost/";
                String PLACE = "Schooldb";
                String USERNAME = "root";
                String PASSWORD = "";

                Connection myconnection = DriverManager.getConnection(PATH + PLACE, USERNAME, PASSWORD);
            try
            {
                String a="select * from teachingstaff where firstname=?";
                PreparedStatement mystatement=myconnection.prepareStatement(a);
                mystatement.setString(1, namebox.getText());
                DefaultTableModel mymodel=(DefaultTableModel) personal1.getModel();
                ResultSet myresult=mystatement.executeQuery();
                mymodel.setRowCount(0);
                if(myresult.next()) //rest code is same as of list of students
                {
                    getContentPane().revalidate();
                    do
                    {
                        String  name,qualf,phone,gender;
                        name=myresult.getString("firstname");
                        qualf=myresult.getString("qualification");
                        phone=myresult.getString("phonenumber");
                        gender=myresult.getString("gender");
                        
                        mymodel.addRow(new Object[]{name,qualf,phone,gender});

                    }
                    while(myresult.next());

                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "No Records Exist");
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
            }
            finally
            {
                myconnection.close();
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
        }

       

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int answer=JOptionPane.showConfirmDialog(rootPane, "Do you really want to delete?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if(answer==JOptionPane.YES_OPTION)
        {

            try
            {  String PATH = "jdbc:mysql://localhost/";
                String PLACE = "Schooldb";
                String USERNAME = "root";
                String PASSWORD = "";

                Connection myconnection = DriverManager.getConnection(PATH + PLACE, USERNAME, PASSWORD);

                try
                {
                    String a="delete from teachingstaff where phonenumber=?";
                    PreparedStatement mystatement=myconnection.prepareStatement(a);
                    DefaultTableModel mymodel=(DefaultTableModel) personal1.getModel();

                    String un = personal1.getValueAt(personal1.getSelectedRow(), 2).toString();

                    mystatement.setString(1,un);

                    if(mystatement.executeUpdate()>0)
                    {

                        JOptionPane.showMessageDialog(rootPane, "Staff Data Deleted Successfully ");
                        mymodel.removeRow(personal1.getSelectedRow());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Error in Saving Successfully1 ");
                    }

                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query1 " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection1 " + e.getMessage());
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
try{
String PATH="jdbc:mysql://localhost/";
String PLACE="Schooldb";
String USERNAME="root";
String PASSWORD="";
Connection myconnection=DriverManager.getConnection(PATH + PLACE,USERNAME,PASSWORD);

try{
    if(NewPassword1.getText().equals(ConfirmPassword1.getText())){
String query="update usertable set password=? where Username=? and Password=?";
 PreparedStatement mystatement1=myconnection.prepareStatement(query);
 mystatement1.setString(1,NewPassword1.getText());
 mystatement1.setString(2, LoginWindow.v);
 mystatement1.setString(3,OldPassword1.getText());
 if(mystatement1.executeUpdate()>0 )
 {
 
 JOptionPane.showMessageDialog(rootPane, "Password changed successfully");
 this.dispose();
 
 }
 else
 {
 JOptionPane.showMessageDialog(rootPane, "Current Password Incorrect");
 }
}
    else
 {
 JOptionPane.showMessageDialog(rootPane, "New Password does not match");
 }
}
catch(Exception e){
        
         JOptionPane.showMessageDialog(rootPane, "Error is due to "+ e.getMessage());
   
        }
finally{
        myconnection.close();
        }



}
catch(Exception e){
JOptionPane.showMessageDialog(rootPane, "Error in connection due to "+ e.getMessage());
}


    }//GEN-LAST:event_jButton11ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField ConfirmPassword1;
    private javax.swing.JPasswordField NewPassword1;
    private javax.swing.JPasswordField OldPassword1;
    private javax.swing.JRadioButton adbtn;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField namebox;
    private javax.swing.JRadioButton nbtn;
    private javax.swing.JTable personal1;
    private javax.swing.JTable school;
    private javax.swing.JTextField searchbox;
    // End of variables declaration//GEN-END:variables
}
